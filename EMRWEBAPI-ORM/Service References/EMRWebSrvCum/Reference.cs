//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace EMRWEBAPI.EMRWebSrvCum {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://cch.org.tw/", ConfigurationName="EMRWebSrvCum.WebService1Soap")]
    public interface WebService1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/CommunicationEMRTransaction_Count", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable CommunicationEMRTransaction_Count(string SYSTYPE, string date1, string date2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/CommunicationEMRTransaction_Count", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> CommunicationEMRTransaction_CountAsync(string SYSTYPE, string date1, string date2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/CommunicationEMRTransaction_NotTrans", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable CommunicationEMRTransaction_NotTrans(string SYSTYPE, string date1, string date2, string doctype, string dockey, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/CommunicationEMRTransaction_NotTrans", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> CommunicationEMRTransaction_NotTransAsync(string SYSTYPE, string date1, string date2, string doctype, string dockey, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/Check_Cch_ID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Check_Cch_ID(string userid, string userwp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/Check_Cch_ID", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> Check_Cch_IDAsync(string userid, string userwp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/get_cch_manager", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string get_cch_manager(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/get_cch_manager", ReplyAction="*")]
        System.Threading.Tasks.Task<string> get_cch_managerAsync(string userid);
        
        // CODEGEN: 參數 'get_cch_manager_listResult' 需要無法以參數模式來擷取的其他架構資訊。特定屬性為 'System.Xml.Serialization.XmlElementAttribute'。
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/get_cch_manager_list", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EMRWEBAPI.EMRWebSrvCum.get_cch_manager_listResponse get_cch_manager_list(EMRWEBAPI.EMRWebSrvCum.get_cch_manager_listRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/get_cch_manager_list", ReplyAction="*")]
        System.Threading.Tasks.Task<EMRWEBAPI.EMRWebSrvCum.get_cch_manager_listResponse> get_cch_manager_listAsync(EMRWEBAPI.EMRWebSrvCum.get_cch_manager_listRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/CommunicationEMR_PTS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CommunicationEMR_PTS(string s_chart, string s_acc, string s_emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/CommunicationEMR_PTS", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CommunicationEMR_PTSAsync(string s_chart, string s_acc, string s_emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/_Load_System_type", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable _Load_System_type();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/_Load_System_type", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> _Load_System_typeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/_Load_Manage_List", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable _Load_Manage_List(string flags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/_Load_Manage_List", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> _Load_Manage_ListAsync(string flags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/Return_Patient_id", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Return_Patient_id(string chard_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/Return_Patient_id", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Return_Patient_idAsync(string chard_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/Check_Cch_IDs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Check_Cch_IDs(string userid, string userwp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/Check_Cch_IDs", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Check_Cch_IDsAsync(string userid, string userwp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/Return_Cch_Power", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Return_Cch_Power(string userid, string func_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/Return_Cch_Power", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Return_Cch_PowerAsync(string userid, string func_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/Return_Cch_SubPower", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable Return_Cch_SubPower(string func_code, string subfunc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/Return_Cch_SubPower", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> Return_Cch_SubPowerAsync(string func_code, string subfunc);
        
        // CODEGEN: 參數 'DownloadEmrFileResult' 需要無法以參數模式來擷取的其他架構資訊。特定屬性為 'System.Xml.Serialization.XmlElementAttribute'。
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/DownloadEmrFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EMRWEBAPI.EMRWebSrvCum.DownloadEmrFileResponse DownloadEmrFile(EMRWEBAPI.EMRWebSrvCum.DownloadEmrFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/DownloadEmrFile", ReplyAction="*")]
        System.Threading.Tasks.Task<EMRWEBAPI.EMRWebSrvCum.DownloadEmrFileResponse> DownloadEmrFileAsync(EMRWEBAPI.EMRWebSrvCum.DownloadEmrFileRequest request);
        
        // CODEGEN: 參數 'GetImageResult' 需要無法以參數模式來擷取的其他架構資訊。特定屬性為 'System.Xml.Serialization.XmlElementAttribute'。
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/GetImage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EMRWEBAPI.EMRWebSrvCum.GetImageResponse GetImage(EMRWEBAPI.EMRWebSrvCum.GetImageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/GetImage", ReplyAction="*")]
        System.Threading.Tasks.Task<EMRWEBAPI.EMRWebSrvCum.GetImageResponse> GetImageAsync(EMRWEBAPI.EMRWebSrvCum.GetImageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/GetImageType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetImageType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/GetImageType", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetImageTypeAsync();
        
        // CODEGEN: 參數 'fs' 需要無法以參數模式來擷取的其他架構資訊。特定屬性為 'System.Xml.Serialization.XmlElementAttribute'。
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/UploadFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EMRWEBAPI.EMRWebSrvCum.UploadFileResponse UploadFile(EMRWEBAPI.EMRWebSrvCum.UploadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/UploadFile", ReplyAction="*")]
        System.Threading.Tasks.Task<EMRWEBAPI.EMRWebSrvCum.UploadFileResponse> UploadFileAsync(EMRWEBAPI.EMRWebSrvCum.UploadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/CommitEMRTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int CommitEMRTransaction(string doctype, string dockey, string verdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/CommitEMRTransaction", ReplyAction="*")]
        System.Threading.Tasks.Task<int> CommitEMRTransactionAsync(string doctype, string dockey, string verdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/CommitEMRSignature", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int CommitEMRSignature(string doctype, string dockey, string verdate, string signdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/CommitEMRSignature", ReplyAction="*")]
        System.Threading.Tasks.Task<int> CommitEMRSignatureAsync(string doctype, string dockey, string verdate, string signdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/GetEMRPARMT", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetEMRPARMT(string PARMTNAM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/GetEMRPARMT", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetEMRPARMTAsync(string PARMTNAM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/CountDirectoryfile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int CountDirectoryfile(string paths);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/CountDirectoryfile", ReplyAction="*")]
        System.Threading.Tasks.Task<int> CountDirectoryfileAsync(string paths);
        
        // CODEGEN: 參數 'GetDocDataResult' 需要無法以參數模式來擷取的其他架構資訊。特定屬性為 'System.Xml.Serialization.XmlElementAttribute'。
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/GetDocData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EMRWEBAPI.EMRWebSrvCum.GetDocDataResponse GetDocData(EMRWEBAPI.EMRWebSrvCum.GetDocDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://cch.org.tw/GetDocData", ReplyAction="*")]
        System.Threading.Tasks.Task<EMRWEBAPI.EMRWebSrvCum.GetDocDataResponse> GetDocDataAsync(EMRWEBAPI.EMRWebSrvCum.GetDocDataRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="get_cch_manager_list", WrapperNamespace="http://cch.org.tw/", IsWrapped=true)]
    public partial class get_cch_manager_listRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://cch.org.tw/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Stream_tmp;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://cch.org.tw/", Order=1)]
        public string tablenames;
        
        public get_cch_manager_listRequest() {
        }
        
        public get_cch_manager_listRequest(byte[] Stream_tmp, string tablenames) {
            this.Stream_tmp = Stream_tmp;
            this.tablenames = tablenames;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="get_cch_manager_listResponse", WrapperNamespace="http://cch.org.tw/", IsWrapped=true)]
    public partial class get_cch_manager_listResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://cch.org.tw/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] get_cch_manager_listResult;
        
        public get_cch_manager_listResponse() {
        }
        
        public get_cch_manager_listResponse(byte[] get_cch_manager_listResult) {
            this.get_cch_manager_listResult = get_cch_manager_listResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadEmrFile", WrapperNamespace="http://cch.org.tw/", IsWrapped=true)]
    public partial class DownloadEmrFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://cch.org.tw/", Order=0)]
        public string FName;
        
        public DownloadEmrFileRequest() {
        }
        
        public DownloadEmrFileRequest(string FName) {
            this.FName = FName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadEmrFileResponse", WrapperNamespace="http://cch.org.tw/", IsWrapped=true)]
    public partial class DownloadEmrFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://cch.org.tw/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownloadEmrFileResult;
        
        public DownloadEmrFileResponse() {
        }
        
        public DownloadEmrFileResponse(byte[] DownloadEmrFileResult) {
            this.DownloadEmrFileResult = DownloadEmrFileResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetImage", WrapperNamespace="http://cch.org.tw/", IsWrapped=true)]
    public partial class GetImageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://cch.org.tw/", Order=0)]
        public string requestFileName;
        
        public GetImageRequest() {
        }
        
        public GetImageRequest(string requestFileName) {
            this.requestFileName = requestFileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetImageResponse", WrapperNamespace="http://cch.org.tw/", IsWrapped=true)]
    public partial class GetImageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://cch.org.tw/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetImageResult;
        
        public GetImageResponse() {
        }
        
        public GetImageResponse(byte[] GetImageResult) {
            this.GetImageResult = GetImageResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFile", WrapperNamespace="http://cch.org.tw/", IsWrapped=true)]
    public partial class UploadFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://cch.org.tw/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] fs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://cch.org.tw/", Order=1)]
        public string FileName;
        
        public UploadFileRequest() {
        }
        
        public UploadFileRequest(byte[] fs, string FileName) {
            this.fs = fs;
            this.FileName = FileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFileResponse", WrapperNamespace="http://cch.org.tw/", IsWrapped=true)]
    public partial class UploadFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://cch.org.tw/", Order=0)]
        public string UploadFileResult;
        
        public UploadFileResponse() {
        }
        
        public UploadFileResponse(string UploadFileResult) {
            this.UploadFileResult = UploadFileResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDocData", WrapperNamespace="http://cch.org.tw/", IsWrapped=true)]
    public partial class GetDocDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://cch.org.tw/", Order=0)]
        public string loc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://cch.org.tw/", Order=1)]
        public string DocSeq;
        
        public GetDocDataRequest() {
        }
        
        public GetDocDataRequest(string loc, string DocSeq) {
            this.loc = loc;
            this.DocSeq = DocSeq;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDocDataResponse", WrapperNamespace="http://cch.org.tw/", IsWrapped=true)]
    public partial class GetDocDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://cch.org.tw/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetDocDataResult;
        
        public GetDocDataResponse() {
        }
        
        public GetDocDataResponse(byte[] GetDocDataResult) {
            this.GetDocDataResult = GetDocDataResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebService1SoapChannel : EMRWEBAPI.EMRWebSrvCum.WebService1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebService1SoapClient : System.ServiceModel.ClientBase<EMRWEBAPI.EMRWebSrvCum.WebService1Soap>, EMRWEBAPI.EMRWebSrvCum.WebService1Soap {
        
        public WebService1SoapClient() {
        }
        
        public WebService1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable CommunicationEMRTransaction_Count(string SYSTYPE, string date1, string date2) {
            return base.Channel.CommunicationEMRTransaction_Count(SYSTYPE, date1, date2);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> CommunicationEMRTransaction_CountAsync(string SYSTYPE, string date1, string date2) {
            return base.Channel.CommunicationEMRTransaction_CountAsync(SYSTYPE, date1, date2);
        }
        
        public System.Data.DataTable CommunicationEMRTransaction_NotTrans(string SYSTYPE, string date1, string date2, string doctype, string dockey, string status) {
            return base.Channel.CommunicationEMRTransaction_NotTrans(SYSTYPE, date1, date2, doctype, dockey, status);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> CommunicationEMRTransaction_NotTransAsync(string SYSTYPE, string date1, string date2, string doctype, string dockey, string status) {
            return base.Channel.CommunicationEMRTransaction_NotTransAsync(SYSTYPE, date1, date2, doctype, dockey, status);
        }
        
        public bool Check_Cch_ID(string userid, string userwp) {
            return base.Channel.Check_Cch_ID(userid, userwp);
        }
        
        public System.Threading.Tasks.Task<bool> Check_Cch_IDAsync(string userid, string userwp) {
            return base.Channel.Check_Cch_IDAsync(userid, userwp);
        }
        
        public string get_cch_manager(string userid) {
            return base.Channel.get_cch_manager(userid);
        }
        
        public System.Threading.Tasks.Task<string> get_cch_managerAsync(string userid) {
            return base.Channel.get_cch_managerAsync(userid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EMRWEBAPI.EMRWebSrvCum.get_cch_manager_listResponse EMRWEBAPI.EMRWebSrvCum.WebService1Soap.get_cch_manager_list(EMRWEBAPI.EMRWebSrvCum.get_cch_manager_listRequest request) {
            return base.Channel.get_cch_manager_list(request);
        }
        
        public byte[] get_cch_manager_list(byte[] Stream_tmp, string tablenames) {
            EMRWEBAPI.EMRWebSrvCum.get_cch_manager_listRequest inValue = new EMRWEBAPI.EMRWebSrvCum.get_cch_manager_listRequest();
            inValue.Stream_tmp = Stream_tmp;
            inValue.tablenames = tablenames;
            EMRWEBAPI.EMRWebSrvCum.get_cch_manager_listResponse retVal = ((EMRWEBAPI.EMRWebSrvCum.WebService1Soap)(this)).get_cch_manager_list(inValue);
            return retVal.get_cch_manager_listResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EMRWEBAPI.EMRWebSrvCum.get_cch_manager_listResponse> EMRWEBAPI.EMRWebSrvCum.WebService1Soap.get_cch_manager_listAsync(EMRWEBAPI.EMRWebSrvCum.get_cch_manager_listRequest request) {
            return base.Channel.get_cch_manager_listAsync(request);
        }
        
        public System.Threading.Tasks.Task<EMRWEBAPI.EMRWebSrvCum.get_cch_manager_listResponse> get_cch_manager_listAsync(byte[] Stream_tmp, string tablenames) {
            EMRWEBAPI.EMRWebSrvCum.get_cch_manager_listRequest inValue = new EMRWEBAPI.EMRWebSrvCum.get_cch_manager_listRequest();
            inValue.Stream_tmp = Stream_tmp;
            inValue.tablenames = tablenames;
            return ((EMRWEBAPI.EMRWebSrvCum.WebService1Soap)(this)).get_cch_manager_listAsync(inValue);
        }
        
        public bool CommunicationEMR_PTS(string s_chart, string s_acc, string s_emp) {
            return base.Channel.CommunicationEMR_PTS(s_chart, s_acc, s_emp);
        }
        
        public System.Threading.Tasks.Task<bool> CommunicationEMR_PTSAsync(string s_chart, string s_acc, string s_emp) {
            return base.Channel.CommunicationEMR_PTSAsync(s_chart, s_acc, s_emp);
        }
        
        public System.Data.DataTable _Load_System_type() {
            return base.Channel._Load_System_type();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> _Load_System_typeAsync() {
            return base.Channel._Load_System_typeAsync();
        }
        
        public System.Data.DataTable _Load_Manage_List(string flags) {
            return base.Channel._Load_Manage_List(flags);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> _Load_Manage_ListAsync(string flags) {
            return base.Channel._Load_Manage_ListAsync(flags);
        }
        
        public string Return_Patient_id(string chard_no) {
            return base.Channel.Return_Patient_id(chard_no);
        }
        
        public System.Threading.Tasks.Task<string> Return_Patient_idAsync(string chard_no) {
            return base.Channel.Return_Patient_idAsync(chard_no);
        }
        
        public string Check_Cch_IDs(string userid, string userwp) {
            return base.Channel.Check_Cch_IDs(userid, userwp);
        }
        
        public System.Threading.Tasks.Task<string> Check_Cch_IDsAsync(string userid, string userwp) {
            return base.Channel.Check_Cch_IDsAsync(userid, userwp);
        }
        
        public string Return_Cch_Power(string userid, string func_code) {
            return base.Channel.Return_Cch_Power(userid, func_code);
        }
        
        public System.Threading.Tasks.Task<string> Return_Cch_PowerAsync(string userid, string func_code) {
            return base.Channel.Return_Cch_PowerAsync(userid, func_code);
        }
        
        public System.Data.DataTable Return_Cch_SubPower(string func_code, string subfunc) {
            return base.Channel.Return_Cch_SubPower(func_code, subfunc);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> Return_Cch_SubPowerAsync(string func_code, string subfunc) {
            return base.Channel.Return_Cch_SubPowerAsync(func_code, subfunc);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EMRWEBAPI.EMRWebSrvCum.DownloadEmrFileResponse EMRWEBAPI.EMRWebSrvCum.WebService1Soap.DownloadEmrFile(EMRWEBAPI.EMRWebSrvCum.DownloadEmrFileRequest request) {
            return base.Channel.DownloadEmrFile(request);
        }
        
        public byte[] DownloadEmrFile(string FName) {
            EMRWEBAPI.EMRWebSrvCum.DownloadEmrFileRequest inValue = new EMRWEBAPI.EMRWebSrvCum.DownloadEmrFileRequest();
            inValue.FName = FName;
            EMRWEBAPI.EMRWebSrvCum.DownloadEmrFileResponse retVal = ((EMRWEBAPI.EMRWebSrvCum.WebService1Soap)(this)).DownloadEmrFile(inValue);
            return retVal.DownloadEmrFileResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EMRWEBAPI.EMRWebSrvCum.DownloadEmrFileResponse> EMRWEBAPI.EMRWebSrvCum.WebService1Soap.DownloadEmrFileAsync(EMRWEBAPI.EMRWebSrvCum.DownloadEmrFileRequest request) {
            return base.Channel.DownloadEmrFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<EMRWEBAPI.EMRWebSrvCum.DownloadEmrFileResponse> DownloadEmrFileAsync(string FName) {
            EMRWEBAPI.EMRWebSrvCum.DownloadEmrFileRequest inValue = new EMRWEBAPI.EMRWebSrvCum.DownloadEmrFileRequest();
            inValue.FName = FName;
            return ((EMRWEBAPI.EMRWebSrvCum.WebService1Soap)(this)).DownloadEmrFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EMRWEBAPI.EMRWebSrvCum.GetImageResponse EMRWEBAPI.EMRWebSrvCum.WebService1Soap.GetImage(EMRWEBAPI.EMRWebSrvCum.GetImageRequest request) {
            return base.Channel.GetImage(request);
        }
        
        public byte[] GetImage(string requestFileName) {
            EMRWEBAPI.EMRWebSrvCum.GetImageRequest inValue = new EMRWEBAPI.EMRWebSrvCum.GetImageRequest();
            inValue.requestFileName = requestFileName;
            EMRWEBAPI.EMRWebSrvCum.GetImageResponse retVal = ((EMRWEBAPI.EMRWebSrvCum.WebService1Soap)(this)).GetImage(inValue);
            return retVal.GetImageResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EMRWEBAPI.EMRWebSrvCum.GetImageResponse> EMRWEBAPI.EMRWebSrvCum.WebService1Soap.GetImageAsync(EMRWEBAPI.EMRWebSrvCum.GetImageRequest request) {
            return base.Channel.GetImageAsync(request);
        }
        
        public System.Threading.Tasks.Task<EMRWEBAPI.EMRWebSrvCum.GetImageResponse> GetImageAsync(string requestFileName) {
            EMRWEBAPI.EMRWebSrvCum.GetImageRequest inValue = new EMRWEBAPI.EMRWebSrvCum.GetImageRequest();
            inValue.requestFileName = requestFileName;
            return ((EMRWEBAPI.EMRWebSrvCum.WebService1Soap)(this)).GetImageAsync(inValue);
        }
        
        public string GetImageType() {
            return base.Channel.GetImageType();
        }
        
        public System.Threading.Tasks.Task<string> GetImageTypeAsync() {
            return base.Channel.GetImageTypeAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EMRWEBAPI.EMRWebSrvCum.UploadFileResponse EMRWEBAPI.EMRWebSrvCum.WebService1Soap.UploadFile(EMRWEBAPI.EMRWebSrvCum.UploadFileRequest request) {
            return base.Channel.UploadFile(request);
        }
        
        public string UploadFile(byte[] fs, string FileName) {
            EMRWEBAPI.EMRWebSrvCum.UploadFileRequest inValue = new EMRWEBAPI.EMRWebSrvCum.UploadFileRequest();
            inValue.fs = fs;
            inValue.FileName = FileName;
            EMRWEBAPI.EMRWebSrvCum.UploadFileResponse retVal = ((EMRWEBAPI.EMRWebSrvCum.WebService1Soap)(this)).UploadFile(inValue);
            return retVal.UploadFileResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EMRWEBAPI.EMRWebSrvCum.UploadFileResponse> EMRWEBAPI.EMRWebSrvCum.WebService1Soap.UploadFileAsync(EMRWEBAPI.EMRWebSrvCum.UploadFileRequest request) {
            return base.Channel.UploadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<EMRWEBAPI.EMRWebSrvCum.UploadFileResponse> UploadFileAsync(byte[] fs, string FileName) {
            EMRWEBAPI.EMRWebSrvCum.UploadFileRequest inValue = new EMRWEBAPI.EMRWebSrvCum.UploadFileRequest();
            inValue.fs = fs;
            inValue.FileName = FileName;
            return ((EMRWEBAPI.EMRWebSrvCum.WebService1Soap)(this)).UploadFileAsync(inValue);
        }
        
        public int CommitEMRTransaction(string doctype, string dockey, string verdate) {
            return base.Channel.CommitEMRTransaction(doctype, dockey, verdate);
        }
        
        public System.Threading.Tasks.Task<int> CommitEMRTransactionAsync(string doctype, string dockey, string verdate) {
            return base.Channel.CommitEMRTransactionAsync(doctype, dockey, verdate);
        }
        
        public int CommitEMRSignature(string doctype, string dockey, string verdate, string signdate) {
            return base.Channel.CommitEMRSignature(doctype, dockey, verdate, signdate);
        }
        
        public System.Threading.Tasks.Task<int> CommitEMRSignatureAsync(string doctype, string dockey, string verdate, string signdate) {
            return base.Channel.CommitEMRSignatureAsync(doctype, dockey, verdate, signdate);
        }
        
        public string GetEMRPARMT(string PARMTNAM) {
            return base.Channel.GetEMRPARMT(PARMTNAM);
        }
        
        public System.Threading.Tasks.Task<string> GetEMRPARMTAsync(string PARMTNAM) {
            return base.Channel.GetEMRPARMTAsync(PARMTNAM);
        }
        
        public int CountDirectoryfile(string paths) {
            return base.Channel.CountDirectoryfile(paths);
        }
        
        public System.Threading.Tasks.Task<int> CountDirectoryfileAsync(string paths) {
            return base.Channel.CountDirectoryfileAsync(paths);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EMRWEBAPI.EMRWebSrvCum.GetDocDataResponse EMRWEBAPI.EMRWebSrvCum.WebService1Soap.GetDocData(EMRWEBAPI.EMRWebSrvCum.GetDocDataRequest request) {
            return base.Channel.GetDocData(request);
        }
        
        public byte[] GetDocData(string loc, string DocSeq) {
            EMRWEBAPI.EMRWebSrvCum.GetDocDataRequest inValue = new EMRWEBAPI.EMRWebSrvCum.GetDocDataRequest();
            inValue.loc = loc;
            inValue.DocSeq = DocSeq;
            EMRWEBAPI.EMRWebSrvCum.GetDocDataResponse retVal = ((EMRWEBAPI.EMRWebSrvCum.WebService1Soap)(this)).GetDocData(inValue);
            return retVal.GetDocDataResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EMRWEBAPI.EMRWebSrvCum.GetDocDataResponse> EMRWEBAPI.EMRWebSrvCum.WebService1Soap.GetDocDataAsync(EMRWEBAPI.EMRWebSrvCum.GetDocDataRequest request) {
            return base.Channel.GetDocDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<EMRWEBAPI.EMRWebSrvCum.GetDocDataResponse> GetDocDataAsync(string loc, string DocSeq) {
            EMRWEBAPI.EMRWebSrvCum.GetDocDataRequest inValue = new EMRWEBAPI.EMRWebSrvCum.GetDocDataRequest();
            inValue.loc = loc;
            inValue.DocSeq = DocSeq;
            return ((EMRWEBAPI.EMRWebSrvCum.WebService1Soap)(this)).GetDocDataAsync(inValue);
        }
    }
}
